import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,e as t,o as a}from"./app-CBUg3kgI.js";const e="/study_blog/assets/images/%E4%BD%BF%E7%94%A8Grid%E5%AE%9E%E7%8E%B0%E7%AA%97%E5%8F%A3%E8%87%AA%E9%80%82%E5%BA%94.png",l={};function o(p,n){return a(),s("div",null,[...n[0]||(n[0]=[t('<h2 id="grid布局方案" tabindex="-1"><a class="header-anchor" href="#grid布局方案"><span>Grid布局方案</span></a></h2><ol><li>设计好Grid布局里面行和列的比例</li><li>为主界面设置MinWidth和MinHeight</li><li>运行查看布局是否合理</li><li>为行或列设置MinWidth和MinHeight（根据实际运行时的界面宽高计算）</li><li>在控件中设置 <code>HorizontalAlignment=&quot;Stretch&quot;</code> 和 <code>VerticalAlignment=&quot;Stretch&quot;</code></li></ol><figure><img src="'+e+`" alt="使用Grid实现窗口自适应" tabindex="0" loading="lazy"><figcaption>使用Grid实现窗口自适应</figcaption></figure><h2 id="grid布局示例" tabindex="-1"><a class="header-anchor" href="#grid布局示例"><span>Grid布局示例</span></a></h2><details class="hint-container details"><summary>完整XAML代码</summary><div class="language-xaml line-numbers-mode" data-highlighter="shiki" data-ext="xaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xaml"><span class="line"><span>&lt;UserControl x:Class=&quot;WPF的MVVM模式的Prism框架.Views.PLC&quot;</span></span>
<span class="line"><span>             xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span>
<span class="line"><span>             xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span>
<span class="line"><span>             xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot; </span></span>
<span class="line"><span>             xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot; </span></span>
<span class="line"><span>             xmlns:local=&quot;clr-namespace:WPF的MVVM模式的Prism框架.Views&quot;</span></span>
<span class="line"><span>             xmlns:prism=&quot;http://prismlibrary.com/&quot;</span></span>
<span class="line"><span>             mc:Ignorable=&quot;d&quot; </span></span>
<span class="line"><span>             d:DesignWidth=&quot;1357&quot;</span></span>
<span class="line"><span>             d:DesignHeight=&quot;821&quot;</span></span>
<span class="line"><span>             prism:ViewModelLocator.AutoWireViewModel=&quot;True&quot;&gt;</span></span>
<span class="line"><span>    &lt;!-- 这行代码运用了 Prism 框架的 ViewModelLocator 自动将视图（UserControl）的数据上下文设置为对应的视图模型（ViewModel）。ViewModelLocator 会依据视图的名称自动查找匹配的视图模型，例如 PLC 视图会对应 PLCViewModel 视图模型。 --&gt;</span></span>
<span class="line"><span>    &lt;Grid Background=&quot;{DynamicResource TertiaryBackgroundColor}&quot;&gt;</span></span>
<span class="line"><span>        &lt;Grid.RowDefinitions&gt;</span></span>
<span class="line"><span>            &lt;RowDefinition Height=&quot;*&quot;/&gt;</span></span>
<span class="line"><span>            &lt;RowDefinition Height=&quot;*&quot;/&gt;</span></span>
<span class="line"><span>            &lt;RowDefinition Height=&quot;*&quot;/&gt;</span></span>
<span class="line"><span>            &lt;RowDefinition Height=&quot;*&quot;/&gt;</span></span>
<span class="line"><span>            &lt;RowDefinition Height=&quot;*&quot;/&gt;</span></span>
<span class="line"><span>            &lt;RowDefinition Height=&quot;*&quot;/&gt;</span></span>
<span class="line"><span>        &lt;/Grid.RowDefinitions&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        &lt;Grid.ColumnDefinitions&gt;</span></span>
<span class="line"><span>            &lt;ColumnDefinition Width=&quot;2*&quot; MinWidth=&quot;124&quot;/&gt;</span></span>
<span class="line"><span>            &lt;ColumnDefinition Width=&quot;2*&quot; MinWidth=&quot;124&quot;/&gt;</span></span>
<span class="line"><span>            &lt;ColumnDefinition Width=&quot;2*&quot; MinWidth=&quot;124&quot;/&gt;</span></span>
<span class="line"><span>            &lt;ColumnDefinition Width=&quot;5*&quot; MinWidth=&quot;310&quot;/&gt;</span></span>
<span class="line"><span>            &lt;ColumnDefinition Width=&quot;5*&quot; MinWidth=&quot;310&quot;/&gt;</span></span>
<span class="line"><span>        &lt;/Grid.ColumnDefinitions&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        &lt;!-- 第一行控件示例 --&gt;</span></span>
<span class="line"><span>        &lt;Border Grid.Row=&quot;0&quot; Grid.Column=&quot;0&quot; Style=&quot;{StaticResource TimeCardStyle}&quot; HorizontalAlignment=&quot;Stretch&quot; VerticalAlignment=&quot;Stretch&quot; Background=&quot;{DynamicResource TertiaryBlueColor}&quot;&gt;</span></span>
<span class="line"><span>            &lt;Button Width=&quot;120&quot; </span></span>
<span class="line"><span>                    Height=&quot;110&quot; </span></span>
<span class="line"><span>                    Content=&quot;连接断开&quot; </span></span>
<span class="line"><span>                    FontFamily=&quot;微软雅黑&quot; </span></span>
<span class="line"><span>                    FontSize=&quot;18&quot; </span></span>
<span class="line"><span>                    FontWeight=&quot;Bold&quot;</span></span>
<span class="line"><span>                    Style=&quot;{StaticResource LargeRoundedButtonStyle}&quot;</span></span>
<span class="line"><span>                    HorizontalAlignment=&quot;Center&quot; </span></span>
<span class="line"><span>                    VerticalAlignment=&quot;Center&quot;/&gt;</span></span>
<span class="line"><span>        &lt;/Border&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        &lt;!-- 其他控件代码... --&gt;</span></span>
<span class="line"><span>    &lt;/Grid&gt;</span></span>
<span class="line"><span>&lt;/UserControl&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="stackpanel布局方案" tabindex="-1"><a class="header-anchor" href="#stackpanel布局方案"><span>StackPanel布局方案</span></a></h2><p>直接在StackPanel上设置 <code>HorizontalAlignment=&quot;Stretch&quot;</code>，然后在子控件上设置 <code>MinWidth</code> 或 <code>MinHeight</code>：</p><h3 id="水平排列示例" tabindex="-1"><a class="header-anchor" href="#水平排列示例"><span>水平排列示例</span></a></h3><div class="language-xaml line-numbers-mode" data-highlighter="shiki" data-ext="xaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xaml"><span class="line"><span>&lt;StackPanel Orientation=&quot;Horizontal&quot; HorizontalAlignment=&quot;Stretch&quot;&gt;</span></span>
<span class="line"><span>    &lt;Button Content=&quot;保存&quot; MinWidth=&quot;100&quot; HorizontalAlignment=&quot;Stretch&quot; Margin=&quot;5&quot;/&gt;</span></span>
<span class="line"><span>    &lt;Button Content=&quot;取消&quot; MinWidth=&quot;100&quot; HorizontalAlignment=&quot;Stretch&quot; Margin=&quot;5&quot;/&gt;</span></span>
<span class="line"><span>&lt;/StackPanel&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="垂直排列示例" tabindex="-1"><a class="header-anchor" href="#垂直排列示例"><span>垂直排列示例</span></a></h3><div class="language-xaml line-numbers-mode" data-highlighter="shiki" data-ext="xaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xaml"><span class="line"><span>&lt;StackPanel Orientation=&quot;Vertical&quot; HorizontalAlignment=&quot;Stretch&quot;&gt;</span></span>
<span class="line"><span>    &lt;Button Content=&quot;保存&quot; MinHeight=&quot;30&quot; Margin=&quot;5&quot; Padding=&quot;10,5&quot;/&gt;</span></span>
<span class="line"><span>    &lt;Button Content=&quot;取消&quot; MinHeight=&quot;30&quot; Margin=&quot;5&quot; Padding=&quot;10,5&quot;/&gt;</span></span>
<span class="line"><span>    &lt;Button Content=&quot;这是一个很长的按钮文本&quot; MinHeight=&quot;30&quot; Margin=&quot;5&quot; Padding=&quot;10,5&quot;/&gt;</span></span>
<span class="line"><span>&lt;/StackPanel&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11)])])}const c=i(l,[["render",o]]),u=JSON.parse('{"path":"/acrticle/Csharp/WPF%E5%AD%A6%E4%B9%A0/WPF%E7%AA%97%E5%8F%A3%E8%87%AA%E9%80%82%E5%BA%94%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%A1%88.html","title":"WPF窗口自适应设计方案","lang":"zh-CN","frontmatter":{"title":"WPF窗口自适应设计方案","icon":"code","order":7,"category":["C#学习"],"tag":["WPF","窗口自适应"],"description":"Grid布局方案 设计好Grid布局里面行和列的比例 为主界面设置MinWidth和MinHeight 运行查看布局是否合理 为行或列设置MinWidth和MinHeight（根据实际运行时的界面宽高计算） 在控件中设置 HorizontalAlignment=\\"Stretch\\" 和 VerticalAlignment=\\"Stretch\\" 使用Grid...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WPF窗口自适应设计方案\\",\\"image\\":[\\"https://mister-hope.github.io/study_blog/assets/images/使用Grid实现窗口自适应.png\\"],\\"dateModified\\":\\"2025-09-17T08:58:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XJ\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/study_blog/acrticle/Csharp/WPF%E5%AD%A6%E4%B9%A0/WPF%E7%AA%97%E5%8F%A3%E8%87%AA%E9%80%82%E5%BA%94%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%A1%88.html"}],["meta",{"property":"og:site_name","content":"个人学习记录博客"}],["meta",{"property":"og:title","content":"WPF窗口自适应设计方案"}],["meta",{"property":"og:description","content":"Grid布局方案 设计好Grid布局里面行和列的比例 为主界面设置MinWidth和MinHeight 运行查看布局是否合理 为行或列设置MinWidth和MinHeight（根据实际运行时的界面宽高计算） 在控件中设置 HorizontalAlignment=\\"Stretch\\" 和 VerticalAlignment=\\"Stretch\\" 使用Grid..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/study_blog/assets/images/使用Grid实现窗口自适应.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-17T08:58:51.000Z"}],["meta",{"property":"article:tag","content":"窗口自适应"}],["meta",{"property":"article:tag","content":"WPF"}],["meta",{"property":"article:modified_time","content":"2025-09-17T08:58:51.000Z"}]]},"git":{"createdTime":1758099531000,"updatedTime":1758099531000,"contributors":[{"name":"XJ","username":"XJ","email":"XJ@qq.com","commits":1,"url":"https://github.com/XJ"}]},"readingTime":{"minutes":1.66,"words":498},"filePathRelative":"acrticle/Csharp/WPF学习/WPF窗口自适应设计方案.md","excerpt":"<h2>Grid布局方案</h2>\\n<ol>\\n<li>设计好Grid布局里面行和列的比例</li>\\n<li>为主界面设置MinWidth和MinHeight</li>\\n<li>运行查看布局是否合理</li>\\n<li>为行或列设置MinWidth和MinHeight（根据实际运行时的界面宽高计算）</li>\\n<li>在控件中设置 <code>HorizontalAlignment=\\"Stretch\\"</code> 和 <code>VerticalAlignment=\\"Stretch\\"</code></li>\\n</ol>\\n<figure><img src=\\"/assets/images/使用Grid实现窗口自适应.png\\" alt=\\"使用Grid实现窗口自适应\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>使用Grid实现窗口自适应</figcaption></figure>","autoDesc":true}');export{c as comp,u as data};
