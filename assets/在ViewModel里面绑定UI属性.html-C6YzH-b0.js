import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e,o as n}from"./app-DIA8nXH9.js";const t={};function l(h,i){return n(),a("div",null,[...i[0]||(i[0]=[e(`<h1 id="在viewmodel里面绑定ui属性" tabindex="-1"><a class="header-anchor" href="#在viewmodel里面绑定ui属性"><span>在ViewModel里面绑定UI属性</span></a></h1><h2 id="定义属性" tabindex="-1"><a class="header-anchor" href="#定义属性"><span>定义属性</span></a></h2><p>先定义一个私有变量，再定义公共属性：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> double</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> _sidebarWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> double</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> SidebarWidth</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">_sidebarWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =&gt; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SetProperty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> _sidebarWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在view中绑定" tabindex="-1"><a class="header-anchor" href="#在view中绑定"><span>在View中绑定</span></a></h2><p>之后在 <code>View.xaml</code> 文件里面使用 <code>Binding</code> 进行绑定：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ColumnDefinition</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;SidebarColumn&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{Binding SidebarWidth, UpdateSourceTrigger=PropertyChanged, FallbackValue=200, Mode=TwoWay}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="binding-参数说明" tabindex="-1"><a class="header-anchor" href="#binding-参数说明"><span>Binding 参数说明</span></a></h3><ul><li><code>Binding</code>: 代表双向绑定</li><li><code>UpdateSourceTrigger=PropertyChanged</code>: 代表绑定的目标属性变化时，立即更新源属性</li><li><code>FallbackValue</code>: 是代表默认值</li><li><code>Mode=TwoWay</code>: 代表双向数据流，使得 View（界面）和 ViewModel（数据源）之间的数据能够自动同步</li></ul>`,9)])])}const p=s(t,[["render",l]]),k=JSON.parse('{"path":"/acrticle/Csharp/WPF%E5%AD%A6%E4%B9%A0/%E5%9C%A8ViewModel%E9%87%8C%E9%9D%A2%E7%BB%91%E5%AE%9AUI%E5%B1%9E%E6%80%A7.html","title":"在ViewModel里面绑定UI属性","lang":"zh-CN","frontmatter":{"title":"在ViewModel里面绑定UI属性","icon":"code","order":12,"category":["C#学习"],"tag":["WPF","ViewModel"],"description":"在ViewModel里面绑定UI属性 定义属性 先定义一个私有变量，再定义公共属性： 在View中绑定 之后在 View.xaml 文件里面使用 Binding 进行绑定： Binding 参数说明 Binding: 代表双向绑定 UpdateSourceTrigger=PropertyChanged: 代表绑定的目标属性变化时，立即更新源属性 Fal...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在ViewModel里面绑定UI属性\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-24T05:18:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XJ\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/study_blog/acrticle/Csharp/WPF%E5%AD%A6%E4%B9%A0/%E5%9C%A8ViewModel%E9%87%8C%E9%9D%A2%E7%BB%91%E5%AE%9AUI%E5%B1%9E%E6%80%A7.html"}],["meta",{"property":"og:site_name","content":"个人学习记录博客"}],["meta",{"property":"og:title","content":"在ViewModel里面绑定UI属性"}],["meta",{"property":"og:description","content":"在ViewModel里面绑定UI属性 定义属性 先定义一个私有变量，再定义公共属性： 在View中绑定 之后在 View.xaml 文件里面使用 Binding 进行绑定： Binding 参数说明 Binding: 代表双向绑定 UpdateSourceTrigger=PropertyChanged: 代表绑定的目标属性变化时，立即更新源属性 Fal..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-24T05:18:54.000Z"}],["meta",{"property":"article:tag","content":"ViewModel"}],["meta",{"property":"article:tag","content":"WPF"}],["meta",{"property":"article:modified_time","content":"2025-09-24T05:18:54.000Z"}]]},"git":{"createdTime":1758691134000,"updatedTime":1758691134000,"contributors":[{"name":"XJ","username":"XJ","email":"XJ@qq.com","commits":1,"url":"https://github.com/XJ"}]},"readingTime":{"minutes":0.57,"words":170},"filePathRelative":"acrticle/Csharp/WPF学习/在ViewModel里面绑定UI属性.md","excerpt":"\\n<h2>定义属性</h2>\\n<p>先定义一个私有变量，再定义公共属性：</p>\\n<div class=\\"language-csharp line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"csharp\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-csharp\\"><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">private</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> double</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> _sidebarWidth</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 200</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">public</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> double</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> SidebarWidth</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">    get</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> =&gt; </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">_sidebarWidth</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">    set</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> =&gt; </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">SetProperty</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">ref</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> _sidebarWidth</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">value</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{p as comp,k as data};
