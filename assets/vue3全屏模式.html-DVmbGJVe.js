import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as n,o as a}from"./app-BjTVDKDX.js";const l={};function t(d,e){return a(),i("div",null,e[0]||(e[0]=[n(`<figure><img src="https://cdn.jsdelivr.net/gh/kadobao/picx-images-hosting@master/20241014/image.6pnhxv97d8.jpg" alt="image" tabindex="0" loading="lazy"><figcaption>image</figcaption></figure><hr><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>          &lt;!-- 添加全屏切换按钮 --&gt;</span></span>
<span class="line"><span>          &lt;el-menu-item @click=&quot;toggleFullScreen&quot;&gt;</span></span>
<span class="line"><span>            &lt;el-icon&gt;</span></span>
<span class="line"><span>              &lt;full-screen v-if=&quot;!isFullscreen&quot; /&gt;</span></span>
<span class="line"><span>              &lt;aim v-else /&gt;</span></span>
<span class="line"><span>            &lt;/el-icon&gt;</span></span>
<span class="line"><span>            &lt;span&gt;{{ isFullscreen ? &#39;退出全屏&#39; : &#39;全屏&#39; }}&lt;/span&gt;</span></span>
<span class="line"><span>          &lt;/el-menu-item&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>import { ref, watch, watchEffect} from &#39;vue&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 全屏切换功能</span></span>
<span class="line"><span>const toggleFullScreen = () =&gt; {</span></span>
<span class="line"><span>  if (!document.fullscreenElement) {</span></span>
<span class="line"><span>    document.documentElement.requestFullscreen()</span></span>
<span class="line"><span>    isFullscreen.value = true</span></span>
<span class="line"><span>  } else {</span></span>
<span class="line"><span>    if (document.exitFullscreen) {</span></span>
<span class="line"><span>      document.exitFullscreen()</span></span>
<span class="line"><span>      isFullscreen.value = false</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 使用 watchEffect 监听全屏变化</span></span>
<span class="line"><span>watchEffect(() =&gt; {</span></span>
<span class="line"><span>  isFullscreen.value = !!document.fullscreenElement</span></span>
<span class="line"><span>})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个 <code>toggleFullScreen</code> 函数实现了网页进入和退出全屏模式的功能。我们逐步解析其中的逻辑：</p><h3 id="功能解析" tabindex="-1"><a class="header-anchor" href="#功能解析"><span>功能解析：</span></a></h3><ol><li><p><strong>检测是否在全屏模式</strong>：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fullscreenElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>这里通过 <code>document.fullscreenElement</code> 检测当前是否处于全屏模式。</li><li><code>document.fullscreenElement</code> 返回当前处于全屏模式的元素。如果没有任何元素处于全屏状态，它将返回 <code>null</code>。因此，当 <code>!document.fullscreenElement</code> 为 <code>true</code> 时，表示当前不是全屏状态。</li></ul></li><li><p><strong>进入全屏模式</strong>：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">documentElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">requestFullscreen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">isFullscreen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>当检测到没有元素在全屏时，调用 <code>document.documentElement.requestFullscreen()</code> 来请求浏览器将整个页面元素（<code>document.documentElement</code>，即 <code>&lt;html&gt;</code> 标签）进入全屏模式。</li><li>请求全屏操作是异步的，但是这里没有处理 <code>.then()</code> 或 <code>.catch()</code>，因此假设操作成功后，将 <code>isFullscreen.value</code> 设置为 <code>true</code>，表示页面已进入全屏模式。</li></ul></li><li><p><strong>退出全屏模式</strong>：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">exitFullscreen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">exitFullscreen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  isFullscreen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>如果已经处于全屏状态，则检查浏览器是否支持退出全屏功能 (<code>document.exitFullscreen</code>)。</li><li>如果支持，调用 <code>document.exitFullscreen()</code> 退出全屏模式，并将 <code>isFullscreen.value</code> 设置为 <code>false</code>，表示页面已退出全屏模式。</li></ul></li></ol><h3 id="具体工作原理" tabindex="-1"><a class="header-anchor" href="#具体工作原理"><span>具体工作原理：</span></a></h3><ul><li><strong><code>document.fullscreenElement</code></strong>: 检查当前页面是否有元素在全屏模式。</li><li><strong><code>document.documentElement.requestFullscreen()</code></strong>: 将整个页面请求为全屏。</li><li><strong><code>document.exitFullscreen()</code></strong>: 退出全屏模式。</li><li><strong><code>isFullscreen.value</code></strong>: 响应式状态，记录页面是否在全屏模式，通常用于更新界面（例如切换按钮文本或图标）。</li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结：</span></a></h3><ul><li>该函数的主要作用是当用户点击某个按钮时，判断当前是否处于全屏状态。如果不是全屏状态，则请求进入全屏；如果已经在全屏状态，则退出全屏模式。</li></ul>`,11)]))}const r=s(l,[["render",t],["__file","vue3全屏模式.html.vue"]]),h=JSON.parse(`{"path":"/acrticle/vue%E5%AD%A6%E4%B9%A0/vue3%E5%85%A8%E5%B1%8F%E6%A8%A1%E5%BC%8F.html","title":"vue3全屏模式","lang":"zh-CN","frontmatter":{"title":"vue3全屏模式","icon":null,"order":null,"category":["vue3学习"],"tag":["vue3学习"],"description":"imageimage 这个 toggleFullScreen 函数实现了网页进入和退出全屏模式的功能。我们逐步解析其中的逻辑： 功能解析： 检测是否在全屏模式： 这里通过 document.fullscreenElement 检测当前是否处于全屏模式。 document.fullscreenElement 返回当前处于全屏模式的元素。如果没有任何元素处...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/acrticle/vue%E5%AD%A6%E4%B9%A0/vue3%E5%85%A8%E5%B1%8F%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"个人学习记录博客"}],["meta",{"property":"og:title","content":"vue3全屏模式"}],["meta",{"property":"og:description","content":"imageimage 这个 toggleFullScreen 函数实现了网页进入和退出全屏模式的功能。我们逐步解析其中的逻辑： 功能解析： 检测是否在全屏模式： 这里通过 document.fullscreenElement 检测当前是否处于全屏模式。 document.fullscreenElement 返回当前处于全屏模式的元素。如果没有任何元素处..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/kadobao/picx-images-hosting@master/20241014/image.6pnhxv97d8.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-16T15:19:16.000Z"}],["meta",{"property":"article:author","content":"Mr.Hope"}],["meta",{"property":"article:tag","content":"vue3学习"}],["meta",{"property":"article:modified_time","content":"2024-10-16T15:19:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue3全屏模式\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/kadobao/picx-images-hosting@master/20241014/image.6pnhxv97d8.jpg\\"],\\"dateModified\\":\\"2024-10-16T15:19:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hope\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"功能解析：","slug":"功能解析","link":"#功能解析","children":[]},{"level":3,"title":"具体工作原理：","slug":"具体工作原理","link":"#具体工作原理","children":[]},{"level":3,"title":"总结：","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1729091956000,"updatedTime":1729091956000,"contributors":[{"name":"cf","email":"toysouth0@gmail.com","commits":1}]},"readingTime":{"minutes":1.75,"words":525},"filePathRelative":"acrticle/vue学习/vue3全屏模式.md","localizedDate":"2024年10月16日","excerpt":"<figure><img src=\\"https://cdn.jsdelivr.net/gh/kadobao/picx-images-hosting@master/20241014/image.6pnhxv97d8.jpg\\" alt=\\"image\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>image</figcaption></figure>\\n<hr>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>          &lt;!-- 添加全屏切换按钮 --&gt;</span></span>\\n<span class=\\"line\\"><span>          &lt;el-menu-item @click=\\"toggleFullScreen\\"&gt;</span></span>\\n<span class=\\"line\\"><span>            &lt;el-icon&gt;</span></span>\\n<span class=\\"line\\"><span>              &lt;full-screen v-if=\\"!isFullscreen\\" /&gt;</span></span>\\n<span class=\\"line\\"><span>              &lt;aim v-else /&gt;</span></span>\\n<span class=\\"line\\"><span>            &lt;/el-icon&gt;</span></span>\\n<span class=\\"line\\"><span>            &lt;span&gt;{{ isFullscreen ? '退出全屏' : '全屏' }}&lt;/span&gt;</span></span>\\n<span class=\\"line\\"><span>          &lt;/el-menu-item&gt;</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{r as comp,h as data};
