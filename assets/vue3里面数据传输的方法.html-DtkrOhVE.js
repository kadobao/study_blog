import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as n,o as r}from"./app-C7uw3Huf.js";const s={};function o(i,t){return r(),l("div",null,[...t[0]||(t[0]=[n('<table><thead><tr><th style="text-align:left;">方法</th><th style="text-align:left;">适用场景</th><th style="text-align:left;">优点</th><th style="text-align:left;">缺点</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>Props/Emits</strong></td><td style="text-align:left;"><strong>父子组件间双向通信</strong> <br>（父传子：Props<br>子传父：Emits）</td><td style="text-align:left;">简单直观，符合组件化思想，<strong>数据流清晰可预测</strong></td><td style="text-align:left;">跨层级时代码冗余，需要逐层传递（称为“prop 逐级透传”）</td></tr><tr><td style="text-align:left;"><strong>v-model</strong></td><td style="text-align:left;"><strong>父子组件间双向绑定</strong> <br>（主要用于表单类组件，如 input、select、自定义输入组件）<br><strong>本质：Props/Emits 的语法糖</strong></td><td style="text-align:left;"><strong>语法简洁</strong>，实现双向绑定非常方便，是 Vue 的核心特性</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">Provide/Inject</td><td style="text-align:left;">跨层级组件通信（主要是祖先传后代）</td><td style="text-align:left;">简化跨层级传值，避免 prop 逐级透传</td><td style="text-align:left;">不适合频繁修改的数据，<strong>数据源不明确</strong>，不利于组件复用</td></tr><tr><td style="text-align:left;">路由参数</td><td style="text-align:left;">跨页面基础数据传递</td><td style="text-align:left;">实现简单，与路由绑定，便于页面分享和状态恢复</td><td style="text-align:left;">Query 暴露在 URL，Params 在浏览器刷新后可能丢失</td></tr><tr><td style="text-align:left;">Pinia</td><td style="text-align:left;">全局状态共享（复杂应用）</td><td style="text-align:left;">响应式，支持调试工具，可持久化，类型安全</td><td style="text-align:left;">简单场景略显繁琐，增加项目复杂度</td></tr><tr><td style="text-align:left;">本地存储（LocalStorage）</td><td style="text-align:left;">持久化存储非敏感数据</td><td style="text-align:left;">无需后端，永久保存，同源共享</td><td style="text-align:left;">存储容量有限（约5MB），<strong>非响应式</strong>，不适合存储敏感数据</td></tr></tbody></table><p><strong>补充说明：</strong></p><ol><li><strong>Props/Emits</strong> - Vue 最基础的组件通信方式</li><li><strong>Provide/Inject</strong> - 主要用于深层嵌套组件的数据传递</li><li><strong>路由参数</strong> - 适用于页面间传递基础数据（如 ID、类型等）</li><li><strong>Pinia</strong> - Vue 官方推荐的状态管理库，替代 Vuex</li><li><strong>LocalStorage</strong> - 浏览器本地存储，适合保存用户偏好设置等</li><li><strong>v-model</strong> - Vue3.4增加了defineModel宏，用于在组件中定义双向绑定的属性，更加方便了</li></ol>',3)])])}const g=e(s,[["render",o]]),y=JSON.parse('{"path":"/acrticle/vue%E5%AD%A6%E4%B9%A0/vue3%E9%87%8C%E9%9D%A2%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%9A%84%E6%96%B9%E6%B3%95.html","title":"vue3中数据传输的方法","lang":"zh-CN","frontmatter":{"title":"vue3中数据传输的方法","icon":"fa-brands fa-vuejs","order":34,"category":["vue3学习"],"tag":["vue3学习"],"description":"补充说明： Props/Emits - Vue 最基础的组件通信方式 Provide/Inject - 主要用于深层嵌套组件的数据传递 路由参数 - 适用于页面间传递基础数据（如 ID、类型等） Pinia - Vue 官方推荐的状态管理库，替代 Vuex LocalStorage - 浏览器本地存储，适合保存用户偏好设置等 v-model - Vue...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"vue3中数据传输的方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-10-25T02:27:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XJ\\",\\"url\\":\\"https://kadobao.github.io/study_blog/acrticle/\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/study_blog/acrticle/vue%E5%AD%A6%E4%B9%A0/vue3%E9%87%8C%E9%9D%A2%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E7%9A%84%E6%96%B9%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"个人学习记录博客"}],["meta",{"property":"og:title","content":"vue3中数据传输的方法"}],["meta",{"property":"og:description","content":"补充说明： Props/Emits - Vue 最基础的组件通信方式 Provide/Inject - 主要用于深层嵌套组件的数据传递 路由参数 - 适用于页面间传递基础数据（如 ID、类型等） Pinia - Vue 官方推荐的状态管理库，替代 Vuex LocalStorage - 浏览器本地存储，适合保存用户偏好设置等 v-model - Vue..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-25T02:27:45.000Z"}],["meta",{"property":"article:tag","content":"vue3学习"}],["meta",{"property":"article:modified_time","content":"2025-10-25T02:27:45.000Z"}]]},"git":{"createdTime":1761358179000,"updatedTime":1761359265000,"contributors":[{"name":"XJ","username":"XJ","email":"XJ@qq.com","commits":2,"url":"https://github.com/XJ"}]},"readingTime":{"minutes":1.57,"words":470},"filePathRelative":"acrticle/vue学习/vue3里面数据传输的方法.md","excerpt":"<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:left\\">方法</th>\\n<th style=\\"text-align:left\\">适用场景</th>\\n<th style=\\"text-align:left\\">优点</th>\\n<th style=\\"text-align:left\\">缺点</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>Props/Emits</strong></td>\\n<td style=\\"text-align:left\\"><strong>父子组件间双向通信</strong> <br>（父传子：Props<br>子传父：Emits）</td>\\n<td style=\\"text-align:left\\">简单直观，符合组件化思想，<strong>数据流清晰可预测</strong></td>\\n<td style=\\"text-align:left\\">跨层级时代码冗余，需要逐层传递（称为“prop 逐级透传”）</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\"><strong>v-model</strong></td>\\n<td style=\\"text-align:left\\"><strong>父子组件间双向绑定</strong> <br>（主要用于表单类组件，如 input、select、自定义输入组件）<br><strong>本质：Props/Emits 的语法糖</strong></td>\\n<td style=\\"text-align:left\\"><strong>语法简洁</strong>，实现双向绑定非常方便，是 Vue 的核心特性</td>\\n<td style=\\"text-align:left\\"></td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">Provide/Inject</td>\\n<td style=\\"text-align:left\\">跨层级组件通信（主要是祖先传后代）</td>\\n<td style=\\"text-align:left\\">简化跨层级传值，避免 prop 逐级透传</td>\\n<td style=\\"text-align:left\\">不适合频繁修改的数据，<strong>数据源不明确</strong>，不利于组件复用</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">路由参数</td>\\n<td style=\\"text-align:left\\">跨页面基础数据传递</td>\\n<td style=\\"text-align:left\\">实现简单，与路由绑定，便于页面分享和状态恢复</td>\\n<td style=\\"text-align:left\\">Query 暴露在 URL，Params 在浏览器刷新后可能丢失</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">Pinia</td>\\n<td style=\\"text-align:left\\">全局状态共享（复杂应用）</td>\\n<td style=\\"text-align:left\\">响应式，支持调试工具，可持久化，类型安全</td>\\n<td style=\\"text-align:left\\">简单场景略显繁琐，增加项目复杂度</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:left\\">本地存储（LocalStorage）</td>\\n<td style=\\"text-align:left\\">持久化存储非敏感数据</td>\\n<td style=\\"text-align:left\\">无需后端，永久保存，同源共享</td>\\n<td style=\\"text-align:left\\">存储容量有限（约5MB），<strong>非响应式</strong>，不适合存储敏感数据</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{g as comp,y as data};
