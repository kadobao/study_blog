import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e,o as n}from"./app-DX2xAlGj.js";const l="/study_blog/assets/images/%E7%AE%80%E5%8D%95%E7%9A%84%E5%9C%A8ViewModel%E7%A6%81%E7%94%A8%E5%91%BD%E4%BB%A4.png",t={};function h(p,i){return n(),a("div",null,[...i[0]||(i[0]=[e(`<h1 id="简单的在viewmodel禁用命令" tabindex="-1"><a class="header-anchor" href="#简单的在viewmodel禁用命令"><span>简单的在ViewModel禁用命令</span></a></h1><h2 id="核心思想" tabindex="-1"><a class="header-anchor" href="#核心思想"><span>核心思想</span></a></h2><p>核心思想就是定义一个bool变量加上if，在命令的最外行加上if。</p><h2 id="实现步骤" tabindex="-1"><a class="header-anchor" href="#实现步骤"><span>实现步骤</span></a></h2><h3 id="_1-定义bool变量" tabindex="-1"><a class="header-anchor" href="#_1-定义bool变量"><span>1. 定义Bool变量</span></a></h3><p>先定义一个bool变量，这样你就可以在其他地方设置它来禁用命令。</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 添加标志控制是否处理鼠标离开事件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> bool</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> _ignoreMouseLeave</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> bool</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> IgnoreMouseLeave</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">return</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> _ignoreMouseLeave</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">    set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SetProperty</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> _ignoreMouseLeave</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-在事件中添加判断" tabindex="-1"><a class="header-anchor" href="#_2-在事件中添加判断"><span>2. 在事件中添加判断</span></a></h3><p>在事件最外层加上if判断。</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-csharp"><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 处理鼠标离开事件</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> OnMouseLeave</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">IgnoreMouseLeave</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">        DragString</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;拖放文件夹或者点击选择文件夹&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="一、图片说明" tabindex="-1"><a class="header-anchor" href="#一、图片说明"><span>一、图片说明</span></a></h2><figure><img src="`+l+'" alt="简单的在ViewModel禁用命令" tabindex="0" loading="lazy"><figcaption>简单的在ViewModel禁用命令</figcaption></figure>',12)])])}const d=s(t,[["render",h]]),o=JSON.parse('{"path":"/acrticle/Csharp/WPF%E5%AD%A6%E4%B9%A0/%E7%AE%80%E5%8D%95%E7%9A%84%E5%9C%A8ViewModel%E7%A6%81%E7%94%A8%E5%91%BD%E4%BB%A4.html","title":"简单的在ViewModel禁用命令","lang":"zh-CN","frontmatter":{"title":"简单的在ViewModel禁用命令","icon":"code","order":14,"category":["C#学习"],"tag":["WPF","Command","禁用"],"description":"简单的在ViewModel禁用命令 核心思想 核心思想就是定义一个bool变量加上if，在命令的最外行加上if。 实现步骤 1. 定义Bool变量 先定义一个bool变量，这样你就可以在其他地方设置它来禁用命令。 2. 在事件中添加判断 在事件最外层加上if判断。 一、图片说明 简单的在ViewModel禁用命令简单的在ViewModel禁用命令","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"简单的在ViewModel禁用命令\\",\\"image\\":[\\"https://mister-hope.github.io/study_blog/assets/images/简单的在ViewModel禁用命令.png\\"],\\"dateModified\\":\\"2025-09-30T01:05:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XJ\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/study_blog/acrticle/Csharp/WPF%E5%AD%A6%E4%B9%A0/%E7%AE%80%E5%8D%95%E7%9A%84%E5%9C%A8ViewModel%E7%A6%81%E7%94%A8%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"个人学习记录博客"}],["meta",{"property":"og:title","content":"简单的在ViewModel禁用命令"}],["meta",{"property":"og:description","content":"简单的在ViewModel禁用命令 核心思想 核心思想就是定义一个bool变量加上if，在命令的最外行加上if。 实现步骤 1. 定义Bool变量 先定义一个bool变量，这样你就可以在其他地方设置它来禁用命令。 2. 在事件中添加判断 在事件最外层加上if判断。 一、图片说明 简单的在ViewModel禁用命令简单的在ViewModel禁用命令"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/study_blog/assets/images/简单的在ViewModel禁用命令.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-30T01:05:38.000Z"}],["meta",{"property":"article:tag","content":"禁用"}],["meta",{"property":"article:tag","content":"Command"}],["meta",{"property":"article:tag","content":"WPF"}],["meta",{"property":"article:modified_time","content":"2025-09-30T01:05:38.000Z"}]]},"git":{"createdTime":1759194338000,"updatedTime":1759194338000,"contributors":[{"name":"XJ","username":"XJ","email":"XJ@qq.com","commits":1,"url":"https://github.com/XJ"}]},"readingTime":{"minutes":0.69,"words":207},"filePathRelative":"acrticle/Csharp/WPF学习/简单的在ViewModel禁用命令.md","excerpt":"\\n<h2>核心思想</h2>\\n<p>核心思想就是定义一个bool变量加上if，在命令的最外行加上if。</p>\\n<h2>实现步骤</h2>\\n<h3>1. 定义Bool变量</h3>\\n<p>先定义一个bool变量，这样你就可以在其他地方设置它来禁用命令。</p>\\n<div class=\\"language-csharp line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"csharp\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-csharp\\"><span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 添加标志控制是否处理鼠标离开事件</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">private</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> bool</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> _ignoreMouseLeave</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> false</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">public</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> bool</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> IgnoreMouseLeave</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">    get</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> { </span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">return</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> _ignoreMouseLeave</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">; }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">    set</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> { </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">SetProperty</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">ref</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> _ignoreMouseLeave</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">, </span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">value</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">); }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,o as data};
