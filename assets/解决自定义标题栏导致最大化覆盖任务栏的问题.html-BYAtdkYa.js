import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as e,o as t}from"./app-gWaU2dE8.js";const n="/study_blog/assets/images/%E8%A7%A3%E5%86%B3%E4%BB%BB%E5%8A%A1%E6%A0%8F%E8%A2%AB%E8%A6%86%E7%9B%96%E9%97%AE%E9%A2%98.png",l={};function h(p,i){return t(),a("div",null,[...i[0]||(i[0]=[e(`<h1 id="解决自定义标题栏导致最大化覆盖任务栏的问题" tabindex="-1"><a class="header-anchor" href="#解决自定义标题栏导致最大化覆盖任务栏的问题"><span>解决自定义标题栏导致最大化覆盖任务栏的问题</span></a></h1><h2 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述"><span>问题描述</span></a></h2><p>在WPF中，当我们设置了 <code>WindowStyle=&quot;None&quot;</code> 来自定义标题栏后，最大化窗口时会导致任务栏被覆盖，影响用户体验。</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><p>要解决这个问题，我们只需要获取系统定义的<strong>最大化窗口的标准尺寸（不包括任务栏）</strong>，然后使用这个定义来设置WPF的 <code>MaxWidth</code> 和 <code>MaxHeight</code> 属性。</p><h3 id="核心代码" tabindex="-1"><a class="header-anchor" href="#核心代码"><span>核心代码</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MaxWidth=&quot;{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">MaxHeight=&quot;{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="完整示例" tabindex="-1"><a class="header-anchor" href="#完整示例"><span>完整示例</span></a></h2><p>下面是一个完整的Window XAML示例，展示了如何应用这个解决方案：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    xmlns:x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    xmlns:d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    xmlns:mc</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    xmlns:local</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;clr-namespace:WPF的MVVM模式的Prism框架&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    xmlns:prism</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://prismlibrary.com/&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    xmlns:i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://schemas.microsoft.com/xaml/behaviors&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    xmlns:materialDesign</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://materialdesigninxaml.net/winfx/xaml/themes&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    x:Class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;WPF的MVVM模式的Prism框架.Views.MainWindow&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    Title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Prism - 导航栏&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    Width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1200&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    Height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;800&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    AllowsTransparency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;True&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    WindowState</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Normal&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    WindowStyle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;None&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    Background</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{x:Null}&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    MinHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;800&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    MinWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1200&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    MaxWidth</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    MaxHeight</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    prism:ViewModelLocator.AutoWireViewModel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;True&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    &lt;!-- 窗口内容 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="效果展示" tabindex="-1"><a class="header-anchor" href="#效果展示"><span>效果展示</span></a></h2><p>应用此解决方案后，窗口最大化时将不再覆盖任务栏，保持了系统的正常布局：</p><figure><img src="`+n+'" alt="解决任务栏被覆盖问题" tabindex="0" loading="lazy"><figcaption>解决任务栏被覆盖问题</figcaption></figure><h2 id="关键点说明" tabindex="-1"><a class="header-anchor" href="#关键点说明"><span>关键点说明</span></a></h2><ol><li><code>SystemParameters.MaximizedPrimaryScreenWidthKey</code>：获取系统定义的最大化窗口宽度（不包括任务栏）</li><li><code>SystemParameters.MaximizedPrimaryScreenHeightKey</code>：获取系统定义的最大化窗口高度（不包括任务栏）</li><li>使用 <code>StaticResource</code> 绑定这些系统参数，确保窗口最大化时正确适应屏幕尺寸</li></ol><p>这种方法简单有效，不需要复杂的代码逻辑，只需要在XAML中添加两个属性绑定即可解决问题。</p>',16)])])}const k=s(l,[["render",h]]),o=JSON.parse('{"path":"/acrticle/Csharp/WPF%E5%AD%A6%E4%B9%A0/%E8%A7%A3%E5%86%B3%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E9%A2%98%E6%A0%8F%E5%AF%BC%E8%87%B4%E6%9C%80%E5%A4%A7%E5%8C%96%E8%A6%86%E7%9B%96%E4%BB%BB%E5%8A%A1%E6%A0%8F%E7%9A%84%E9%97%AE%E9%A2%98.html","title":"解决自定义标题栏导致最大化覆盖任务栏的问题","lang":"zh-CN","frontmatter":{"title":"解决自定义标题栏导致最大化覆盖任务栏的问题","icon":"code","order":21,"category":["C#学习"],"tag":["WPF","任务栏"],"description":"解决自定义标题栏导致最大化覆盖任务栏的问题 问题描述 在WPF中，当我们设置了 WindowStyle=\\"None\\" 来自定义标题栏后，最大化窗口时会导致任务栏被覆盖，影响用户体验。 解决方案 要解决这个问题，我们只需要获取系统定义的最大化窗口的标准尺寸（不包括任务栏），然后使用这个定义来设置WPF的 MaxWidth 和 MaxHeight 属性。 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"解决自定义标题栏导致最大化覆盖任务栏的问题\\",\\"image\\":[\\"https://mister-hope.github.io/study_blog/assets/images/解决任务栏被覆盖问题.png\\"],\\"dateModified\\":\\"2025-10-28T01:04:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XJ\\",\\"url\\":\\"https://kadobao.github.io/study_blog/acrticle/\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/study_blog/acrticle/Csharp/WPF%E5%AD%A6%E4%B9%A0/%E8%A7%A3%E5%86%B3%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E9%A2%98%E6%A0%8F%E5%AF%BC%E8%87%B4%E6%9C%80%E5%A4%A7%E5%8C%96%E8%A6%86%E7%9B%96%E4%BB%BB%E5%8A%A1%E6%A0%8F%E7%9A%84%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"个人学习记录博客"}],["meta",{"property":"og:title","content":"解决自定义标题栏导致最大化覆盖任务栏的问题"}],["meta",{"property":"og:description","content":"解决自定义标题栏导致最大化覆盖任务栏的问题 问题描述 在WPF中，当我们设置了 WindowStyle=\\"None\\" 来自定义标题栏后，最大化窗口时会导致任务栏被覆盖，影响用户体验。 解决方案 要解决这个问题，我们只需要获取系统定义的最大化窗口的标准尺寸（不包括任务栏），然后使用这个定义来设置WPF的 MaxWidth 和 MaxHeight 属性。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/study_blog/assets/images/解决任务栏被覆盖问题.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-28T01:04:57.000Z"}],["meta",{"property":"article:tag","content":"任务栏"}],["meta",{"property":"article:tag","content":"WPF"}],["meta",{"property":"article:modified_time","content":"2025-10-28T01:04:57.000Z"}]]},"git":{"createdTime":1761613497000,"updatedTime":1761613497000,"contributors":[{"name":"XJ","username":"XJ","email":"XJ@qq.com","commits":1,"url":"https://github.com/XJ"}]},"readingTime":{"minutes":1.56,"words":469},"filePathRelative":"acrticle/Csharp/WPF学习/解决自定义标题栏导致最大化覆盖任务栏的问题.md","excerpt":"\\n<h2>问题描述</h2>\\n<p>在WPF中，当我们设置了 <code>WindowStyle=\\"None\\"</code> 来自定义标题栏后，最大化窗口时会导致任务栏被覆盖，影响用户体验。</p>\\n<h2>解决方案</h2>\\n<p>要解决这个问题，我们只需要获取系统定义的<strong>最大化窗口的标准尺寸（不包括任务栏）</strong>，然后使用这个定义来设置WPF的 <code>MaxWidth</code> 和 <code>MaxHeight</code> 属性。</p>\\n<h3>核心代码</h3>\\n<div class=\\"language-xml line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"xml\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-xml\\"><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">MaxWidth=\\"{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenWidthKey}}\\"</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">MaxHeight=\\"{StaticResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}\\"</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{k as comp,o as data};
