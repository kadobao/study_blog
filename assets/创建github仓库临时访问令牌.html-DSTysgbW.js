import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as e,o as a}from"./app-gWaU2dE8.js";const n="/study_blog/assets/images/%E4%B8%B4%E6%97%B6%E4%BB%A4%E7%89%8C%E6%9D%83%E9%99%90.png",r={};function l(o,i){return a(),t("div",null,[...i[0]||(i[0]=[e('<h1 id="创建github仓库临时访问令牌" tabindex="-1"><a class="header-anchor" href="#创建github仓库临时访问令牌"><span>创建GitHub仓库临时访问令牌</span></a></h1><figure><img src="'+n+`" alt="临时令牌权限" tabindex="0" loading="lazy"><figcaption>临时令牌权限</figcaption></figure><h2 id="步骤一-进入令牌生成页面" tabindex="-1"><a class="header-anchor" href="#步骤一-进入令牌生成页面"><span>步骤一：进入令牌生成页面</span></a></h2><ol><li>登录 GitHub 账户</li><li>点击右上角的头像，选择 <strong>Settings</strong></li><li>在左侧菜单中找到并点击 <strong>Developer settings</strong></li><li>选择 <strong>Personal access tokens</strong></li><li>点击 <strong>Fine-grained tokens</strong>（细粒度令牌）</li><li>点击 <strong>Generate new token</strong> 按钮</li></ol><h2 id="步骤二-配置令牌基本信息" tabindex="-1"><a class="header-anchor" href="#步骤二-配置令牌基本信息"><span>步骤二：配置令牌基本信息</span></a></h2><ol><li><strong>Token name</strong>：为令牌起一个描述性的名称，便于识别用途</li><li><strong>Expiration</strong>：设置令牌的有效期，建议根据需要选择合适的时间</li><li><strong>Description</strong>（可选）：添加令牌的描述信息</li></ol><h2 id="步骤三-设置仓库访问权限" tabindex="-1"><a class="header-anchor" href="#步骤三-设置仓库访问权限"><span>步骤三：设置仓库访问权限</span></a></h2><ol><li>选择 <strong>Only select repositories</strong>（仅选择特定仓库）</li><li>在下方列表中选择需要访问的仓库</li><li>这样可以限制令牌的访问范围，提高安全性</li></ol><h2 id="步骤四-设置权限范围" tabindex="-1"><a class="header-anchor" href="#步骤四-设置权限范围"><span>步骤四：设置权限范围</span></a></h2><p>在 <strong>Permissions</strong> 下拉列表中，选择最小权限集合。对于基本的代码读写和CI/CD，建议如下配置：</p><ol><li><p><strong>Contents</strong>：权限级别选择 <strong>Read and write</strong></p><ul><li>这是最核心的权限，允许代码的克隆、推送、拉取</li></ul></li><li><p><strong>Metadata</strong>：权限级别选择 <strong>Read-only</strong>（通常会自动添加）</p><ul><li>这是查看仓库基本信息所必需的，非常安全</li></ul></li><li><p><strong>Workflows</strong>（可选）：</p><ul><li>如果需要这个令牌能够触发 GitHub Actions，请勾选此项</li></ul></li></ol><h2 id="步骤五-生成并保存令牌" tabindex="-1"><a class="header-anchor" href="#步骤五-生成并保存令牌"><span>步骤五：生成并保存令牌</span></a></h2><ol><li>点击页面底部的 <strong>Generate token</strong> 按钮</li><li><strong>重要</strong>：立即复制生成的令牌，因为离开页面后将无法再次查看</li><li>将令牌安全保存，建议使用密码管理器存储</li></ol><h2 id="使用令牌" tabindex="-1"><a class="header-anchor" href="#使用令牌"><span>使用令牌</span></a></h2><h3 id="配置git远程仓库url" tabindex="-1"><a class="header-anchor" href="#配置git远程仓库url"><span>配置Git远程仓库URL</span></a></h3><p>使用以下命令重新配置Git远程仓库URL，将令牌集成到URL中：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set-url</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://kadobao:新令牌@github.com/kadobao/study_blog.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果是没有设置过远程仓库URL，使用这个命令：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remote</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://kadobao:新令牌@github.com/kadobao/study_blog.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>将上面的 <code>新令牌</code> 替换为实际生成的令牌。</p><h3 id="执行git操作" tabindex="-1"><a class="header-anchor" href="#执行git操作"><span>执行Git操作</span></a></h3><p>配置完成后，就可以正常执行Git操作，如：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> push</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pull</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> origin</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,23)])])}const p=s(r,[["render",l]]),d=JSON.parse('{"path":"/acrticle/%E4%B8%80%E4%BA%9B%E9%9A%8F%E8%AE%B0/%E5%88%9B%E5%BB%BAgithub%E4%BB%93%E5%BA%93%E4%B8%B4%E6%97%B6%E8%AE%BF%E9%97%AE%E4%BB%A4%E7%89%8C.html","title":"创建github仓库临时访问令牌","lang":"zh-CN","frontmatter":{"title":"创建github仓库临时访问令牌","icon":null,"order":25,"category":["一些随记"],"tag":["github","临时访问令牌"],"description":"创建GitHub仓库临时访问令牌 临时令牌权限临时令牌权限 步骤一：进入令牌生成页面 登录 GitHub 账户 点击右上角的头像，选择 Settings 在左侧菜单中找到并点击 Developer settings 选择 Personal access tokens 点击 Fine-grained tokens（细粒度令牌） 点击 Generate n...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"创建github仓库临时访问令牌\\",\\"image\\":[\\"https://mister-hope.github.io/study_blog/assets/images/临时令牌权限.png\\"],\\"dateModified\\":\\"2025-10-29T01:12:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XJ\\",\\"url\\":\\"https://kadobao.github.io/study_blog/acrticle/\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/study_blog/acrticle/%E4%B8%80%E4%BA%9B%E9%9A%8F%E8%AE%B0/%E5%88%9B%E5%BB%BAgithub%E4%BB%93%E5%BA%93%E4%B8%B4%E6%97%B6%E8%AE%BF%E9%97%AE%E4%BB%A4%E7%89%8C.html"}],["meta",{"property":"og:site_name","content":"个人学习记录博客"}],["meta",{"property":"og:title","content":"创建github仓库临时访问令牌"}],["meta",{"property":"og:description","content":"创建GitHub仓库临时访问令牌 临时令牌权限临时令牌权限 步骤一：进入令牌生成页面 登录 GitHub 账户 点击右上角的头像，选择 Settings 在左侧菜单中找到并点击 Developer settings 选择 Personal access tokens 点击 Fine-grained tokens（细粒度令牌） 点击 Generate n..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/study_blog/assets/images/临时令牌权限.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-10-29T01:12:22.000Z"}],["meta",{"property":"article:tag","content":"临时访问令牌"}],["meta",{"property":"article:tag","content":"github"}],["meta",{"property":"article:modified_time","content":"2025-10-29T01:12:22.000Z"}]]},"git":{"createdTime":1759819681000,"updatedTime":1761700342000,"contributors":[{"name":"XJ","username":"XJ","email":"XJ@qq.com","commits":3,"url":"https://github.com/XJ"}]},"readingTime":{"minutes":1.9,"words":569},"filePathRelative":"acrticle/一些随记/创建github仓库临时访问令牌.md","excerpt":"\\n<figure><img src=\\"/assets/images/临时令牌权限.png\\" alt=\\"临时令牌权限\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>临时令牌权限</figcaption></figure>\\n<h2>步骤一：进入令牌生成页面</h2>\\n<ol>\\n<li>登录 GitHub 账户</li>\\n<li>点击右上角的头像，选择 <strong>Settings</strong></li>\\n<li>在左侧菜单中找到并点击 <strong>Developer settings</strong></li>\\n<li>选择 <strong>Personal access tokens</strong></li>\\n<li>点击 <strong>Fine-grained tokens</strong>（细粒度令牌）</li>\\n<li>点击 <strong>Generate new token</strong> 按钮</li>\\n</ol>","autoDesc":true}');export{p as comp,d as data};
